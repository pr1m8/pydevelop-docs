"""
Sphinx configuration for test-haive-template.

This configuration uses Pydvlppy shared configuration.
Generated by pydvlppy init.
"""

import os
import sys
from datetime import date

# -- Path setup --------------------------------------------------------------
sys.path.insert(0, os.path.abspath("../.."))

# -- Project information -----------------------------------------------------
project = "test-haive-template"
copyright = f"{date.today().year}, test-haive-template Team"
author = "test-haive-template Team"
release = "0.1.0"

# -- Import shared configuration from pydevelop_docs -------------------------
from pydevelop_docs.config import get_haive_config

# Get the standardized configuration
_config = get_haive_config(
    project, os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
)

# Apply all configuration settings
for key, value in _config.items():
    if key not in ["project", "copyright", "author", "release"]:
        globals()[key] = value

# -- Project-specific overrides ----------------------------------------------
# Override autoapi_dirs for this specific project structure
autoapi_dirs = ["../.."]

# -- Additional setup --------------------------------------------------------


def setup(app):
    """Sphinx setup hook."""
    # Modern CSS files (matches html_css_files)
    css_files = [
        "enhanced-design.css",
        "breadcrumb-navigation.css",
        "mermaid-custom.css",
        "tippy-enhancements.css",
    ]
    for css_file in css_files:
        if os.path.exists("_static/" + css_file):
            app.add_css_file(css_file)

    # Legacy fallback
    if os.path.exists("_static/css/custom.css"):
        app.add_css_file("css/custom.css")

    if os.path.exists("_static/js/api-enhancements.js"):
        app.add_js_file("js/api-enhancements.js")
