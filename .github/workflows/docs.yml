name: Documentation

on:
  push:
    branches: [ main, feat/* ]
  pull_request:
    branches: [ main ]
  
  # Allow manual workflow dispatch
  workflow_dispatch:

# Set GITHUB_TOKEN permissions for deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "docs"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
        
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          ~/.cache/pypoetry
        key: ${{ runner.os }}-docs-${{ hashFiles('**/poetry.lock', '**/docs/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-docs-
          
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          graphviz \
          graphviz-dev \
          plantuml \
          imagemagick \
          pandoc
          
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        
    - name: Install Python dependencies
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
        poetry install --with docs
        
    - name: Install docs requirements
      run: |
        poetry run pip install -r docs/requirements.txt
        
    - name: Build documentation
      run: |
        cd docs
        poetry run make html
        
    - name: Check documentation links
      run: |
        cd docs
        poetry run make linkcheck
      continue-on-error: true
      
    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: docs/build/html/
        
    - name: Setup Pages
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/configure-pages@v4
      
    - name: Upload to GitHub Pages
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs/build/html/

  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v3