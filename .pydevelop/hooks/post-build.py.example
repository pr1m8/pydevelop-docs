#!/usr/bin/env python
"""Example post-build hook - runs after documentation is built."""

import os
from pathlib import Path

# The hook receives these variables:
# - project_path: Path to the project root
# - hooks_dir: Path to the hooks directory
# - pydevelop_dir: Path to .pydevelop directory

print("ðŸ“¦ Running post-build processing...")

# Example: Add custom footer to all HTML files
build_dir = project_path / "docs" / "build" / "html"
if build_dir.exists():
    footer_html = """
    <div class="custom-footer">
        Built with PyDevelop-Docs | 
        <a href="https://github.com/yourusername/yourproject">GitHub</a>
    </div>
    """
    
    for html_file in build_dir.rglob("*.html"):
        content = html_file.read_text()
        if "</body>" in content and "custom-footer" not in content:
            content = content.replace("</body>", f"{footer_html}</body>")
            html_file.write_text(content)
            
    print(f"âœ… Added custom footer to HTML files")

# Example: Generate a build info file
build_info = {
    "timestamp": __import__("datetime").datetime.now().isoformat(),
    "git_commit": os.popen("git rev-parse HEAD").read().strip(),
    "git_branch": os.popen("git branch --show-current").read().strip(),
}

import json
info_file = build_dir / "build-info.json"
info_file.write_text(json.dumps(build_info, indent=2))
print(f"âœ… Created {info_file}")
